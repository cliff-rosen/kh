{
  "metadata": {
    "version": "2.0",
    "last_updated": "2025-01-18",
    "description": "Reorganized tool definitions with PubMed research pipeline",
    "categories": {
      "functional": [
        "search_retrieve",
        "extract_analyze",
        "process_transform",
        "score_rank"
      ],
      "domain": [
        "academic_research",
        "web_content",
        "email_communication",
        "general_purpose"
      ],
      "legacy": [
        "data_retrieval",
        "data_processing",
        "data_analysis"
      ]
    },
    "total_tools": 11
  },
  "tools": [
    {
      "id": "email_search",
      "name": "email_search",
      "description": "Search and retrieve emails from Gmail with filtering capabilities",
      "category": "data_retrieval",
      "functional_category": "search_retrieve",
      "domain_category": "email_communication",
      "tags": [
        "search",
        "email",
        "gmail",
        "filtering",
        "oauth"
      ],
      "pipeline_info": {
        "can_start_pipeline": true,
        "typical_next_tools": [
          "extract",
          "summarize",
          "group_reduce"
        ],
        "pipeline_name": "email_analysis"
      },
      "ui_metadata": {
        "icon": "mail",
        "color": "blue",
        "difficulty": "intermediate"
      },
      "resource_dependencies": [
        {
          "id": "gmail",
          "name": "Gmail",
          "description": "Google Gmail email service for searching and retrieving emails",
          "type": "messaging",
          "auth_config": {
            "type": "oauth2",
            "required_fields": [
              {
                "field_name": "access_token",
                "field_type": "secret",
                "required": true,
                "description": "OAuth access token"
              },
              {
                "field_name": "refresh_token",
                "field_type": "secret",
                "required": true,
                "description": "OAuth refresh token"
              },
              {
                "field_name": "token_expires_at",
                "field_type": "string",
                "required": true,
                "description": "Token expiration timestamp"
              }
            ]
          },
          "connection_schema": {
            "type": "object",
            "description": "Gmail OAuth credentials",
            "is_array": false,
            "fields": {
              "access_token": {
                "type": "string",
                "description": "OAuth access token",
                "is_array": false
              },
              "refresh_token": {
                "type": "string",
                "description": "OAuth refresh token",
                "is_array": false
              },
              "token_expires_at": {
                "type": "string",
                "description": "Token expiration timestamp",
                "is_array": false
              }
            }
          },
          "capabilities": [
            "search",
            "retrieve",
            "send",
            "list_folders"
          ],
          "base_url": "https://gmail.googleapis.com",
          "documentation_url": "https://developers.google.com/gmail/api"
        }
      ],
      "parameters": [
        {
          "id": "query",
          "name": "query",
          "description": "Gmail search query (e.g., 'from:user@example.com', 'subject:meeting', 'after:2024/01/01'). Supports the same query format as the Gmail search box.",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Gmail search query string",
            "is_array": false
          }
        },
        {
          "id": "folder",
          "name": "folder",
          "description": "Gmail folder/label to search in",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Gmail folder name",
            "is_array": false
          }
        },
        {
          "id": "date_range",
          "name": "date_range",
          "description": "Optional date range filter with 'start_date' and 'end_date' keys",
          "required": false,
          "schema_definition": {
            "type": "object",
            "description": "Date range filter",
            "is_array": false,
            "fields": {
              "start_date": {
                "type": "string",
                "description": "Start date (ISO format)",
                "is_array": false
              },
              "end_date": {
                "type": "string",
                "description": "End date (ISO format)",
                "is_array": false
              }
            }
          }
        },
        {
          "id": "limit",
          "name": "limit",
          "description": "Maximum number of emails to retrieve",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Maximum number of emails (default: 100)",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "emails",
          "name": "emails",
          "description": "List of matching emails",
          "required": true,
          "schema_definition": {
            "type": "email",
            "description": "Email object",
            "is_array": true
          }
        }
      ]
    },
    {
      "id": "web_search",
      "name": "web_search",
      "description": "Search the web for real-time information about any topic. Returns URLs and snippets that can be used with web_retrieve to get full webpage content.",
      "category": "data_retrieval",
      "functional_category": "search_retrieve",
      "domain_category": "web_content",
      "tags": [
        "search",
        "web",
        "real-time",
        "urls",
        "snippets"
      ],
      "pipeline_info": {
        "can_start_pipeline": true,
        "typical_next_tools": [
          "web_retrieve"
        ],
        "pipeline_name": "web_research"
      },
      "ui_metadata": {
        "icon": "search",
        "color": "green",
        "difficulty": "beginner"
      },
      "parameters": [
        {
          "id": "search_term",
          "name": "search_term",
          "description": "The search term to look up on the web. Be specific and include relevant keywords for better results.",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Web search query",
            "is_array": false
          }
        },
        {
          "id": "num_results",
          "name": "num_results",
          "description": "Number of search results to return",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Number of results (default: 10)",
            "is_array": false
          }
        },
        {
          "id": "date_range",
          "name": "date_range",
          "description": "Date range for search results ('day', 'week', 'month', 'year', 'all')",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Date range filter (default: 'all')",
            "is_array": false
          }
        },
        {
          "id": "region",
          "name": "region",
          "description": "Geographic region for search results (e.g., 'us', 'uk', 'global')",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Geographic region (default: 'global')",
            "is_array": false
          }
        },
        {
          "id": "language",
          "name": "language",
          "description": "Language for search results (e.g., 'en', 'es', 'fr')",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Language code (default: 'en')",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "search_results",
          "name": "search_results",
          "description": "List of web search results with URLs that can be used with web_retrieve to get full webpage content",
          "required": true,
          "schema_definition": {
            "type": "search_result",
            "description": "Search result objects with URLs for web_retrieve",
            "is_array": true,
            "canonical_type": "CanonicalSearchResult"
          }
        },
        {
          "id": "query",
          "name": "query",
          "description": "Original search query",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Original search query",
            "is_array": false
          }
        },
        {
          "id": "total_results",
          "name": "total_results",
          "description": "Total number of results found",
          "required": true,
          "schema_definition": {
            "type": "number",
            "description": "Total number of results found",
            "is_array": false
          }
        },
        {
          "id": "search_time",
          "name": "search_time",
          "description": "Search execution time in milliseconds",
          "required": true,
          "schema_definition": {
            "type": "number",
            "description": "Search execution time in milliseconds",
            "is_array": false
          }
        },
        {
          "id": "timestamp",
          "name": "timestamp",
          "description": "Search timestamp",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Search timestamp (ISO format)",
            "is_array": false
          }
        },
        {
          "id": "search_engine",
          "name": "search_engine",
          "description": "Search engine used",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Search engine used (google, duckduckgo, etc.)",
            "is_array": false
          }
        },
        {
          "id": "metadata",
          "name": "metadata",
          "description": "Additional search metadata",
          "required": false,
          "schema_definition": {
            "type": "object",
            "description": "Additional search metadata",
            "is_array": false
          }
        }
      ]
    },
    {
      "id": "web_retrieve",
      "name": "web_retrieve",
      "description": "Retrieve and extract full content from webpages. Designed to work with web_search results - takes URLs from search results and retrieves complete webpage content including text, metadata, and structure.",
      "category": "data_retrieval",
      "functional_category": "search_retrieve",
      "domain_category": "web_content",
      "tags": [
        "retrieve",
        "web",
        "content",
        "scraping",
        "html"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [
          "extract",
          "summarize"
        ],
        "pipeline_name": "web_research"
      },
      "ui_metadata": {
        "icon": "download",
        "color": "green",
        "difficulty": "beginner"
      },
      "parameters": [
        {
          "id": "url",
          "name": "url",
          "description": "The URL(s) of the webpage(s) to retrieve and extract content from. Can be a single URL string or an array of URLs. Commonly used with URLs from web_search results.",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Webpage URL(s) - often from web_search results",
            "is_array": true
          }
        },
        {
          "id": "extract_text_only",
          "name": "extract_text_only",
          "description": "Whether to extract only text content (true) or include HTML (false)",
          "required": false,
          "schema_definition": {
            "type": "boolean",
            "description": "Extract text only flag (default: true)",
            "is_array": false
          }
        },
        {
          "id": "timeout",
          "name": "timeout",
          "description": "Request timeout in seconds",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Timeout in seconds (default: 30)",
            "is_array": false
          }
        },
        {
          "id": "user_agent",
          "name": "user_agent",
          "description": "User agent string to use for the request",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "User agent string (default: standard browser user agent)",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "webpage",
          "name": "webpage",
          "description": "Full webpage content with complete text, metadata, and structure. Complements web_search by providing detailed content beyond just snippets.",
          "required": true,
          "schema_definition": {
            "type": "webpage",
            "description": "Complete webpage objects with full content",
            "is_array": true,
            "canonical_type": "CanonicalWebpage"
          }
        },
        {
          "id": "status_code",
          "name": "status_code",
          "description": "HTTP status code from the request",
          "required": true,
          "schema_definition": {
            "type": "number",
            "description": "HTTP status code",
            "is_array": false
          }
        },
        {
          "id": "response_time",
          "name": "response_time",
          "description": "Response time in milliseconds",
          "required": true,
          "schema_definition": {
            "type": "number",
            "description": "Response time in milliseconds",
            "is_array": false
          }
        },
        {
          "id": "timestamp",
          "name": "timestamp",
          "description": "Retrieval timestamp",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Retrieval timestamp (ISO format)",
            "is_array": false
          }
        }
      ]
    },
    {
      "id": "google_scholar_search",
      "name": "google_scholar_search",
      "description": "Search Google Scholar for academic articles, papers, theses, books, conference papers, and other scholarly literature",
      "category": "data_retrieval",
      "functional_category": "search_retrieve",
      "domain_category": "academic_research",
      "tags": [
        "search",
        "academic",
        "research",
        "scholar",
        "citations",
        "literature"
      ],
      "pipeline_info": {
        "can_start_pipeline": true,
        "typical_next_tools": [
          "extract",
          "summarize"
        ],
        "pipeline_name": "academic_research"
      },
      "ui_metadata": {
        "icon": "academic-cap",
        "color": "blue",
        "difficulty": "beginner"
      },
      "resource_dependencies": [
        {
          "id": "serpapi",
          "name": "SerpAPI",
          "description": "SerpAPI service for Google Scholar search functionality",
          "type": "api",
          "auth_config": {
            "type": "api_key",
            "required_fields": [
              {
                "field_name": "api_key",
                "field_type": "secret",
                "required": true,
                "description": "SerpAPI API key"
              }
            ]
          },
          "connection_schema": {
            "type": "object",
            "description": "SerpAPI credentials",
            "is_array": false,
            "fields": {
              "api_key": {
                "type": "string",
                "description": "SerpAPI API key",
                "is_array": false
              }
            }
          },
          "capabilities": [
            "search",
            "pagination",
            "filtering"
          ],
          "base_url": "https://serpapi.com",
          "documentation_url": "https://serpapi.com/google-scholar-api"
        }
      ],
      "parameters": [
        {
          "id": "query",
          "name": "query",
          "description": "Search query for academic literature. Supports advanced operators like author:, intitle:, source:, etc.",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Academic search query",
            "is_array": false
          }
        },
        {
          "id": "num_results",
          "name": "num_results",
          "description": "Number of results to return (1-20, default: 10)",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Number of results (1-20)",
            "is_array": false
          }
        },
        {
          "id": "year_low",
          "name": "year_low",
          "description": "Filter results from this year onwards",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Start year for filtering",
            "is_array": false
          }
        },
        {
          "id": "year_high",
          "name": "year_high",
          "description": "Filter results up to this year",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "End year for filtering",
            "is_array": false
          }
        },
        {
          "id": "sort_by",
          "name": "sort_by",
          "description": "Sort results by relevance or date",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Sort order: 'relevance' or 'date'",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "articles",
          "name": "articles",
          "description": "List of academic articles found in Google Scholar",
          "required": true,
          "schema_definition": {
            "type": "scholar_article",
            "description": "Google Scholar article objects",
            "is_array": true,
            "canonical_type": "CanonicalScholarArticle"
          }
        },
        {
          "id": "search_metadata",
          "name": "search_metadata",
          "description": "Search metadata including total results and query information",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Search metadata",
            "is_array": false,
            "fields": {
              "total_results": {
                "type": "number",
                "description": "Total number of results found",
                "is_array": false
              },
              "query_used": {
                "type": "string",
                "description": "The query that was executed",
                "is_array": false
              },
              "search_time": {
                "type": "number",
                "description": "Search execution time in milliseconds",
                "is_array": false
              }
            }
          }
        }
      ]
    },
    {
      "id": "google_scholar_extract_features",
      "name": "google_scholar_extract_features",
      "description": "Extract research features from Google Scholar articles including pathway relevance, disease relevance, study type, and outcomes using LLM analysis",
      "category": "data_processing",
      "functional_category": "extract_analyze",
      "domain_category": "academic_research",
      "tags": [
        "extract",
        "academic",
        "research",
        "analysis",
        "features",
        "classification"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [
          "summarize",
          "group_reduce"
        ],
        "pipeline_name": "academic_research"
      },
      "ui_metadata": {
        "icon": "beaker",
        "color": "green",
        "difficulty": "intermediate"
      },
      "parameters": [
        {
          "id": "articles",
          "name": "articles",
          "description": "Google Scholar articles to analyze and extract features from",
          "required": true,
          "schema_definition": {
            "type": "scholar_article",
            "description": "List of Google Scholar articles",
            "is_array": true,
            "canonical_type": "CanonicalScholarArticle"
          }
        }
      ],
      "outputs": [
        {
          "id": "enriched_articles",
          "name": "enriched_articles",
          "description": "Articles with extracted research features in metadata",
          "required": true,
          "schema_definition": {
            "type": "scholar_article",
            "description": "Scholar articles enriched with feature metadata",
            "is_array": true,
            "canonical_type": "CanonicalScholarArticle"
          }
        }
      ]
    },
    {
      "id": "pubmed_search",
      "name": "pubmed_search",
      "description": "Search PubMed database using NCBI's E-utilities API to retrieve academic articles",
      "category": "data_retrieval",
      "functional_category": "search_retrieve",
      "domain_category": "academic_research",
      "tags": [
        "search",
        "pubmed",
        "academic",
        "research",
        "ncbi",
        "articles"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [
          "pubmed_extract_features"
        ],
        "pipeline_name": "pubmed_research"
      },
      "ui_metadata": {
        "icon": "book",
        "color": "purple",
        "difficulty": "intermediate"
      },
      "parameters": [
        {
          "id": "search_query",
          "name": "search_query",
          "description": "PubMed search query using standard syntax (e.g., 'machine learning[Title/Abstract] AND 2024[PDAT]')",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "PubMed search query string",
            "is_array": false
          }
        },
        {
          "id": "max_results",
          "name": "max_results",
          "description": "Maximum number of articles to return",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Maximum results (default: 20)",
            "is_array": false
          }
        },
        {
          "id": "sort_order",
          "name": "sort_order",
          "description": "Sort results by: 'relevance', 'date', 'author', 'journal'",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Sort order (default: 'relevance')",
            "is_array": false
          }
        },
        {
          "id": "date_range",
          "name": "date_range",
          "description": "Filter by publication date range",
          "required": false,
          "schema_definition": {
            "type": "object",
            "description": "Date range filter",
            "is_array": false,
            "fields": {
              "start_date": {
                "type": "string",
                "description": "Start date (YYYY/MM/DD format)",
                "is_array": false
              },
              "end_date": {
                "type": "string",
                "description": "End date (YYYY/MM/DD format)",
                "is_array": false
              }
            }
          }
        },
        {
          "id": "article_types",
          "name": "article_types",
          "description": "Filter by article types (Clinical Trial, Review, Meta-Analysis, etc.)",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Article types to include",
            "is_array": true
          }
        },
        {
          "id": "fields",
          "name": "fields",
          "description": "Additional fields to retrieve beyond standard set",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Additional fields",
            "is_array": true
          }
        }
      ],
      "outputs": [
        {
          "id": "articles",
          "name": "articles",
          "description": "Retrieved PubMed articles with full metadata",
          "required": true,
          "schema_definition": {
            "type": "pubmed_article",
            "description": "PubMed article objects",
            "is_array": true,
            "canonical_type": "CanonicalPubMedArticle"
          }
        },
        {
          "id": "total_results",
          "name": "total_results",
          "description": "Total articles found (may exceed returned count)",
          "required": true,
          "schema_definition": {
            "type": "number",
            "description": "Total result count",
            "is_array": false
          }
        },
        {
          "id": "search_metadata",
          "name": "search_metadata",
          "description": "Query performance and API response information",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Search metadata",
            "is_array": false,
            "fields": {
              "query_translation": {
                "type": "string",
                "description": "How PubMed interpreted the query",
                "is_array": false
              },
              "search_time_ms": {
                "type": "number",
                "description": "API response time",
                "is_array": false
              },
              "api_version": {
                "type": "string",
                "description": "NCBI API version used",
                "is_array": false
              }
            }
          }
        }
      ]
    },
    {
      "id": "extract",
      "name": "extract",
      "description": "Extract specific information from items using extraction functions. Works with single items or lists. Note: For detailed information extraction from web content, use web_retrieve first to get full content - search results only contain snippets.",
      "category": "data_processing",
      "functional_category": "extract_analyze",
      "domain_category": "general_purpose",
      "tags": [
        "extract",
        "llm",
        "flexible",
        "analysis",
        "structured"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [
          "summarize",
          "group_reduce"
        ],
        "pipeline_name": "content_analysis"
      },
      "ui_metadata": {
        "icon": "filter",
        "color": "orange",
        "difficulty": "intermediate"
      },
      "parameters": [
        {
          "id": "items",
          "name": "items",
          "description": "Single item or list of items to process. For web content analysis, use webpage objects from web_retrieve rather than search_result objects (which only contain snippets).",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Items to extract from - preferably full content objects",
            "is_array": true
          }
        },
        {
          "id": "extraction_function",
          "name": "extraction_function",
          "description": "Function or prompt describing what to extract (e.g., 'extract sentiment and key topics')",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Extraction function description",
            "is_array": false
          }
        },
        {
          "id": "extraction_fields",
          "name": "extraction_fields",
          "description": "List of field names to extract (e.g., ['sentiment', 'topics', 'priority'])",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Field names to extract",
            "is_array": true
          }
        },
        {
          "id": "batch_process",
          "name": "batch_process",
          "description": "Whether to process as a batch (true) or individual items (false)",
          "required": false,
          "schema_definition": {
            "type": "boolean",
            "description": "Batch processing flag (default: true)",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "extractions",
          "name": "extractions",
          "description": "List of extraction results with item IDs and extracted data",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Extraction result",
            "is_array": true,
            "fields": {
              "item_id": {
                "type": "string",
                "description": "Unique identifier for the item",
                "is_array": false
              },
              "original_item": {
                "type": "object",
                "description": "Original item data",
                "is_array": false
              },
              "extraction": {
                "type": "object",
                "description": "Extracted data fields",
                "is_array": false
              }
            }
          }
        }
      ]
    },
    {
      "id": "summarize",
      "name": "summarize",
      "description": "Create summaries of content based on specific summarization mandates",
      "category": "data_processing",
      "functional_category": "process_transform",
      "domain_category": "general_purpose",
      "tags": [
        "summarize",
        "llm",
        "text",
        "analysis",
        "mandate"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [],
        "pipeline_name": "content_analysis"
      },
      "ui_metadata": {
        "icon": "document",
        "color": "yellow",
        "difficulty": "beginner"
      },
      "parameters": [
        {
          "id": "content",
          "name": "content",
          "description": "Content to summarize (text, structured data, or mixed)",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Content to summarize",
            "is_array": false
          }
        },
        {
          "id": "summarization_mandate",
          "name": "summarization_mandate",
          "description": "Instructions for how to summarize (e.g., 'Create executive summary focusing on key metrics and trends')",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Summarization instructions",
            "is_array": false
          }
        },
        {
          "id": "summary_type",
          "name": "summary_type",
          "description": "Type of summary ('executive', 'detailed', 'bullet_points', 'narrative', 'statistical')",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Summary type (default: 'executive')",
            "is_array": false
          }
        },
        {
          "id": "target_length",
          "name": "target_length",
          "description": "Target length ('brief', 'medium', 'comprehensive')",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Target length (default: 'medium')",
            "is_array": false
          }
        },
        {
          "id": "focus_areas",
          "name": "focus_areas",
          "description": "Specific areas to focus on",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Focus areas",
            "is_array": true
          }
        }
      ],
      "outputs": [
        {
          "id": "summary",
          "name": "summary",
          "description": "Generated summary with metadata",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Summary result",
            "is_array": false,
            "fields": {
              "title": {
                "type": "string",
                "description": "Summary title",
                "is_array": false
              },
              "content": {
                "type": "string",
                "description": "Summary content",
                "is_array": false
              },
              "key_points": {
                "type": "string",
                "description": "Key points extracted",
                "is_array": true
              },
              "recommendations": {
                "type": "string",
                "description": "Recommendations",
                "is_array": true
              },
              "metadata": {
                "type": "object",
                "description": "Summary metadata",
                "is_array": false,
                "fields": {
                  "summary_type": {
                    "type": "string",
                    "description": "Type of summary generated",
                    "is_array": false
                  },
                  "word_count": {
                    "type": "number",
                    "description": "Word count of summary",
                    "is_array": false
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Creation timestamp",
                    "is_array": false
                  }
                }
              }
            }
          }
        }
      ]
    },
    {
      "id": "pubmed_generate_query",
      "name": "pubmed_generate_query",
      "description": "Generate optimized PubMed search queries using LLM assistance based on research goals and requirements",
      "category": "data_processing",
      "functional_category": "process_transform",
      "domain_category": "academic_research",
      "tags": [
        "query",
        "generate",
        "optimization",
        "pubmed",
        "llm"
      ],
      "pipeline_info": {
        "can_start_pipeline": true,
        "typical_next_tools": [
          "pubmed_search"
        ],
        "pipeline_name": "pubmed_research"
      },
      "ui_metadata": {
        "icon": "lightbulb",
        "color": "purple",
        "difficulty": "beginner"
      },
      "parameters": [
        {
          "id": "research_goal",
          "name": "research_goal",
          "description": "High-level description of research objective (e.g., 'Find recent studies on machine learning applications in medical diagnosis')",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Research goal description",
            "is_array": false
          }
        },
        {
          "id": "domain",
          "name": "domain",
          "description": "Research domain for context: 'medical', 'technology', 'biology', 'psychology', 'general'",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Research domain (default: 'general')",
            "is_array": false
          }
        },
        {
          "id": "time_frame",
          "name": "time_frame",
          "description": "Desired publication timeframe: 'last_year', 'last_5_years', 'last_10_years', 'all_time'",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Publication timeframe (default: 'last_5_years')",
            "is_array": false
          }
        },
        {
          "id": "study_types",
          "name": "study_types",
          "description": "Preferred study types: Clinical Trial, Review, Meta-Analysis, Case Study, Observational Study",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Study types to prefer",
            "is_array": true
          }
        },
        {
          "id": "keywords",
          "name": "keywords",
          "description": "Required keywords to include in search",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Required keywords",
            "is_array": true
          }
        },
        {
          "id": "exclude_terms",
          "name": "exclude_terms",
          "description": "Terms to exclude from search results",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Terms to exclude",
            "is_array": true
          }
        },
        {
          "id": "max_queries",
          "name": "max_queries",
          "description": "Number of alternative queries to generate",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Number of queries (default: 3)",
            "is_array": false
          }
        },
        {
          "id": "query_strategy",
          "name": "query_strategy",
          "description": "Query generation approach: 'comprehensive', 'focused', 'exploratory'",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Query strategy (default: 'comprehensive')",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "generated_query",
          "name": "generated_query",
          "description": "Generated PubMed query",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Optimized PubMed search query string",
            "is_array": false
          }
        }
      ]
    },
    {
      "id": "pubmed_extract_features_enriched",
      "name": "pubmed_extract_features_enriched",
      "description": "Extract research features from PubMed articles using predefined biomedical schema and enrich them with metadata (consistent with Scholar extraction)",
      "category": "data_processing",
      "functional_category": "extract_analyze", 
      "domain_category": "academic_research",
      "tags": [
        "extract",
        "research",
        "features",
        "pubmed",
        "biomedical",
        "enrichment"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [
          "summarize",
          "group_reduce"
        ],
        "pipeline_name": "pubmed_research"
      },
      "ui_metadata": {
        "icon": "microscope",
        "color": "purple", 
        "difficulty": "intermediate"
      },
      "parameters": [
        {
          "id": "articles",
          "name": "articles",
          "description": "PubMed articles to analyze for research features",
          "required": true,
          "schema_definition": {
            "type": "pubmed_article",
            "description": "PubMed articles to extract features from",
            "is_array": true,
            "canonical_type": "CanonicalPubMedArticle"
          }
        }
      ],
      "outputs": [
        {
          "id": "enriched_articles",
          "name": "enriched_articles", 
          "description": "PubMed articles enriched with extracted research features in metadata",
          "required": true,
          "schema_definition": {
            "type": "pubmed_article",
            "description": "Enriched PubMed articles with features",
            "is_array": true,
            "canonical_type": "CanonicalPubMedArticle"
          }
        }
      ]
    },
    {
      "id": "pubmed_extract_features",
      "name": "pubmed_extract_features",
      "description": "[DEPRECATED] Extract structured information from PubMed abstracts using configurable schemas - use pubmed_extract_features_enriched instead",
      "category": "data_processing",
      "functional_category": "extract_analyze",
      "domain_category": "academic_research",
      "tags": [
        "extract",
        "research",
        "features",
        "pubmed",
        "llm",
        "schema",
        "deprecated"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [
          "pubmed_score_articles"
        ],
        "pipeline_name": "pubmed_research"
      },
      "ui_metadata": {
        "icon": "microscope",
        "color": "purple",
        "difficulty": "advanced"
      },
      "parameters": [
        {
          "id": "articles",
          "name": "articles",
          "description": "PubMed articles to process from search results",
          "required": true,
          "schema_definition": {
            "type": "pubmed_article",
            "description": "PubMed articles to extract from",
            "is_array": true,
            "canonical_type": "CanonicalPubMedArticle"
          }
        },
        {
          "id": "extraction_schema",
          "name": "extraction_schema",
          "description": "JSON schema defining fields to extract (e.g., {'methodology': 'string', 'sample_size': 'number'})",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Schema for extraction fields",
            "is_array": false
          }
        },
        {
          "id": "extraction_instructions",
          "name": "extraction_instructions",
          "description": "Detailed prompt for LLM extraction with field definitions and formatting requirements",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Detailed extraction instructions",
            "is_array": false
          }
        },
        {
          "id": "batch_size",
          "name": "batch_size",
          "description": "Number of articles to process per LLM call",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Batch size (default: 5)",
            "is_array": false
          }
        },
        {
          "id": "validation_mode",
          "name": "validation_mode",
          "description": "How to handle extraction errors: 'strict', 'partial', 'best_effort'",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Validation mode (default: 'strict')",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "extractions",
          "name": "extractions",
          "description": "Extraction results with original articles and extracted features",
          "required": true,
          "schema_definition": {
            "type": "pubmed_extraction",
            "description": "PubMed extraction objects",
            "is_array": true,
            "canonical_type": "CanonicalPubMedExtraction"
          }
        },
        {
          "id": "extraction_metadata",
          "name": "extraction_metadata",
          "description": "Processing statistics and validation info",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Extraction processing metadata",
            "is_array": false,
            "fields": {
              "total_processed": {
                "type": "number",
                "description": "Articles attempted",
                "is_array": false
              },
              "successful_extractions": {
                "type": "number",
                "description": "Clean extractions",
                "is_array": false
              },
              "partial_extractions": {
                "type": "number",
                "description": "Extractions with some missing fields",
                "is_array": false
              },
              "failed_extractions": {
                "type": "number",
                "description": "Complete failures",
                "is_array": false
              },
              "processing_time_ms": {
                "type": "number",
                "description": "Total processing time",
                "is_array": false
              },
              "tokens_used": {
                "type": "number",
                "description": "LLM tokens consumed",
                "is_array": false
              }
            }
          }
        }
      ]
    },
    {
      "id": "group_reduce",
      "name": "group_reduce",
      "description": "Group objects by rules and apply reduce functions to create aggregated results",
      "category": "data_analysis",
      "functional_category": "process_transform",
      "domain_category": "general_purpose",
      "tags": [
        "group",
        "aggregate",
        "analyze",
        "reduce",
        "statistics"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [
          "summarize"
        ],
        "pipeline_name": "data_analysis"
      },
      "ui_metadata": {
        "icon": "chart",
        "color": "cyan",
        "difficulty": "intermediate"
      },
      "parameters": [
        {
          "id": "items",
          "name": "items",
          "description": "List of objects to group",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Items to group",
            "is_array": true
          }
        },
        {
          "id": "key_func",
          "name": "key_func",
          "description": "Function to extract grouping key from each item (e.g., 'date(timestamp)', 'sender', 'category')",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Key extraction function",
            "is_array": false
          }
        },
        {
          "id": "reduce_func",
          "name": "reduce_func",
          "description": "Function to aggregate items in each group (e.g., 'count', 'sum', 'average')",
          "required": true,
          "schema_definition": {
            "type": "string",
            "description": "Reduction function",
            "is_array": false
          }
        },
        {
          "id": "sort_by",
          "name": "sort_by",
          "description": "Field to sort results by",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Sort field (default: 'group_key')",
            "is_array": false
          }
        },
        {
          "id": "sort_direction",
          "name": "sort_direction",
          "description": "Sort direction ('asc' or 'desc')",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Sort direction (default: 'asc')",
            "is_array": false
          }
        },
        {
          "id": "include_items",
          "name": "include_items",
          "description": "Whether to include original items in results",
          "required": false,
          "schema_definition": {
            "type": "boolean",
            "description": "Include original items flag (default: false)",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "grouped_results",
          "name": "grouped_results",
          "description": "Aggregated results for each group",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Grouped result",
            "is_array": true,
            "fields": {
              "group_key": {
                "type": "string",
                "description": "String representation of the group key",
                "is_array": false
              },
              "group_value": {
                "type": "object",
                "description": "Original group value",
                "is_array": false
              },
              "aggregated_data": {
                "type": "object",
                "description": "Aggregated data for the group",
                "is_array": false
              },
              "items": {
                "type": "object",
                "description": "Original items in the group (if include_items=true)",
                "is_array": true
              }
            }
          }
        }
      ]
    },
    {
      "id": "pubmed_score_articles",
      "name": "pubmed_score_articles",
      "description": "Score articles based on extracted features using configurable scoring functions and criteria",
      "category": "data_analysis",
      "functional_category": "score_rank",
      "domain_category": "academic_research",
      "tags": [
        "score",
        "rank",
        "evaluate",
        "research",
        "criteria"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [
          "pubmed_filter_rank"
        ],
        "pipeline_name": "pubmed_research"
      },
      "ui_metadata": {
        "icon": "star",
        "color": "purple",
        "difficulty": "advanced"
      },
      "parameters": [
        {
          "id": "articles_with_features",
          "name": "articles_with_features",
          "description": "Articles with extracted features from extraction tool",
          "required": true,
          "schema_definition": {
            "type": "pubmed_extraction",
            "description": "Articles with extracted features",
            "is_array": true,
            "canonical_type": "CanonicalPubMedExtraction"
          }
        },
        {
          "id": "scoring_criteria",
          "name": "scoring_criteria",
          "description": "Scoring configuration with weights and functions",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Scoring criteria configuration",
            "is_array": false,
            "fields": {
              "weights": {
                "type": "object",
                "description": "Weight for each extracted feature (0.0-1.0)",
                "is_array": false
              },
              "scoring_functions": {
                "type": "object",
                "description": "How to score each feature type",
                "is_array": false
              },
              "normalization_method": {
                "type": "string",
                "description": "Score normalization method",
                "is_array": false
              }
            }
          }
        },
        {
          "id": "score_function",
          "name": "score_function",
          "description": "Overall scoring algorithm: 'weighted_sum', 'composite', 'ml_model'",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Scoring algorithm (default: 'weighted_sum')",
            "is_array": false
          }
        },
        {
          "id": "include_percentiles",
          "name": "include_percentiles",
          "description": "Whether to calculate percentile rankings",
          "required": false,
          "schema_definition": {
            "type": "boolean",
            "description": "Include percentiles flag (default: true)",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "scored_articles",
          "name": "scored_articles",
          "description": "Articles with calculated scores and breakdowns",
          "required": true,
          "schema_definition": {
            "type": "scored_article",
            "description": "Scored article objects",
            "is_array": true,
            "canonical_type": "CanonicalScoredArticle"
          }
        },
        {
          "id": "scoring_metadata",
          "name": "scoring_metadata",
          "description": "Scoring statistics and methodology info",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Scoring metadata",
            "is_array": false,
            "fields": {
              "score_distribution": {
                "type": "object",
                "description": "Min, max, mean, std dev of scores",
                "is_array": false
              },
              "feature_correlations": {
                "type": "object",
                "description": "Correlation matrix between features",
                "is_array": false
              },
              "scoring_method_used": {
                "type": "string",
                "description": "Which algorithm was applied",
                "is_array": false
              }
            }
          }
        }
      ]
    },
    {
      "id": "pubmed_filter_rank",
      "name": "pubmed_filter_rank",
      "description": "Filter and rank scored articles based on thresholds and additional criteria to produce final result set",
      "category": "data_analysis",
      "functional_category": "score_rank",
      "domain_category": "academic_research",
      "tags": [
        "filter",
        "rank",
        "results",
        "threshold",
        "final"
      ],
      "pipeline_info": {
        "can_start_pipeline": false,
        "typical_next_tools": [],
        "pipeline_name": "pubmed_research"
      },
      "ui_metadata": {
        "icon": "funnel",
        "color": "purple",
        "difficulty": "advanced"
      },
      "parameters": [
        {
          "id": "scored_articles",
          "name": "scored_articles",
          "description": "Articles with calculated scores from scoring tool",
          "required": true,
          "schema_definition": {
            "type": "scored_article",
            "description": "Scored articles to filter and rank",
            "is_array": true,
            "canonical_type": "CanonicalScoredArticle"
          }
        },
        {
          "id": "min_score_threshold",
          "name": "min_score_threshold",
          "description": "Minimum score to include in results (0.0-1.0)",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Minimum score threshold",
            "is_array": false
          }
        },
        {
          "id": "max_results",
          "name": "max_results",
          "description": "Maximum number of articles to return",
          "required": false,
          "schema_definition": {
            "type": "number",
            "description": "Maximum results (default: 10)",
            "is_array": false
          }
        },
        {
          "id": "ranking_criteria",
          "name": "ranking_criteria",
          "description": "Additional ranking factors beyond scores",
          "required": false,
          "schema_definition": {
            "type": "object",
            "description": "Additional ranking criteria",
            "is_array": false,
            "fields": {
              "boost_recent": {
                "type": "boolean",
                "description": "Boost recently published articles",
                "is_array": false
              },
              "boost_high_impact": {
                "type": "boolean",
                "description": "Boost articles from high-impact journals",
                "is_array": false
              },
              "prefer_review_articles": {
                "type": "boolean",
                "description": "Prefer review/meta-analysis articles",
                "is_array": false
              }
            }
          }
        },
        {
          "id": "filters",
          "name": "filters",
          "description": "Additional filter criteria",
          "required": false,
          "schema_definition": {
            "type": "object",
            "description": "Filter criteria",
            "is_array": false,
            "fields": {
              "min_citation_count": {
                "type": "number",
                "description": "Minimum citations required",
                "is_array": false
              },
              "journal_whitelist": {
                "type": "string",
                "description": "Only include these journals",
                "is_array": true
              },
              "exclude_preprints": {
                "type": "boolean",
                "description": "Exclude preprint articles",
                "is_array": false
              }
            }
          }
        },
        {
          "id": "output_format",
          "name": "output_format",
          "description": "Level of detail in results: 'summary', 'detailed', 'analysis_ready'",
          "required": false,
          "schema_definition": {
            "type": "string",
            "description": "Output format (default: 'detailed')",
            "is_array": false
          }
        }
      ],
      "outputs": [
        {
          "id": "ranked_articles",
          "name": "ranked_articles",
          "description": "Final filtered and ranked articles",
          "required": true,
          "schema_definition": {
            "type": "scored_article",
            "description": "Final ranked articles",
            "is_array": true,
            "canonical_type": "CanonicalScoredArticle"
          }
        },
        {
          "id": "filter_metadata",
          "name": "filter_metadata",
          "description": "Filtering and ranking statistics",
          "required": true,
          "schema_definition": {
            "type": "object",
            "description": "Filter processing metadata",
            "is_array": false,
            "fields": {
              "initial_count": {
                "type": "number",
                "description": "Articles before filtering",
                "is_array": false
              },
              "filtered_count": {
                "type": "number",
                "description": "Articles after filtering",
                "is_array": false
              },
              "filters_applied": {
                "type": "string",
                "description": "Which filters were used",
                "is_array": true
              },
              "ranking_method": {
                "type": "string",
                "description": "Ranking algorithm used",
                "is_array": false
              }
            }
          }
        }
      ]
    }
  ]
}